This is a docttest for a function ``say_my_name(first_name, last_name="")``.

Usage
======

``say_my_name`` prints the ``first_name`` and ``last_name``.

::

	>>> say_my_name = __import__('3-say_my_name').say_my_name
	>>> say_my_name("Esther", "Michael")
	My name is Esther Michael

``last_name`` is optional

::

	>>> say_my_name("Esther")
	My name is Esther 

``first_name`` and ``last_name`` must be strings else a TypeError is raised.

::

	>>> say_my_name("Esther", 23)
	Traceback (most recent call last):
	TypeError: last_name must be a string

::

	>>> say_my_name(["Esther", "Kachi"], "Michael")
	Traceback (most recent call last):
	TypeError: first_name must be a string

::
	>>> say_my_name({"Esther", 2}, 7.7)
	Traceback (most recent call last):
	TypeError: first_name must be a string

::

	>>> say_my_name(None)
	Traceback (most recent call last):
	TypeError: first_name must be a string

the function will not run on empty parameters

::

	>>> say_my_name()
	Traceback (most recent call last):
	TypeError: say_my_name() missing 1 required positional argument: 'first_name'
